services:
  backend:
    container_name: mylib-backend
    hostname: backend
    image: ghcr.io/cp-thro/thro-sqs-mylib/backend:latest
    environment:
      - JWT_SECRET=tNp3cASRQw/UJMLX/x5dJ8XmLl+LnFojPGCUPRLIDlI=
      - MACHINE=mock
      - POSTGRES_USER=backend
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres-db
      - POSTGRES_PORT=5432
      - BACKEND_HOST=backend
      - BACKEND_PORT=8080
      - BACKEND_PROTO=http
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=80
      - FRONTEND_PROTO=http
      - OPENLIBRARYURL=http://wiremock:8090
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
      - wiremock
    healthcheck:
      test: curl -f http://backend:8080/api/v1/health || exit 1
      interval: 5s
      retries: 10

  frontend:
    image: ghcr.io/cp-thro/thro-sqs-mylib/frontend:latest
    container_name: mylib-frontend
    hostname: frontend
    restart: always
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8080
      - BACKEND_PROTO=http
    ports:
      - "5174:80"
    depends_on:
      - postgres-db
      - backend

    healthcheck:
      test: curl -f http://frontend:80 || exit 1
      interval: 5s
      retries: 10

  postgres-db:
    image: postgres:latest
    container_name: mylib-postgres-db
    hostname: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=backend
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"

  wiremock:
    image: wiremock/wiremock:3x
    container_name: openlibrary-wiremock
    hostname: wiremock
    ports:
      - "8090:8090"
    volumes:
      - ./wiremock/__files:/home/wiremock/__files
      - ./wiremock/mappings:/home/wiremock/mappings
    entrypoint: ["/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--port", "8090" , "--verbose"]

  playwright:
    image: mcr.microsoft.com/playwright:v1.53.1
    container_name: mylib-playwright
    shm_size: 128M
    depends_on:
      frontend:
        condition: service_healthy # Only if the healthcheck works I can know that the app has fully started
      backend:
        condition: service_healthy
    hostname: playwright
    volumes:
      - ./:/test
    working_dir: /test
    environment:
      - BASE_URL=http://frontend:80
      - CI=true
    entrypoint: ["/bin/sh", "-c", "npm ci && npx playwright test"]



